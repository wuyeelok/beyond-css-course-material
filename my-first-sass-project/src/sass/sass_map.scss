@use "sass:meta";
@use "sass:map";

// Don't forget quotation on keys
// dont forget comma at the end
$colors: (
  "primary": red,
  "secondary": blue,
  "accent": yellow,
  "special": orange,
);

$color-v2: (
  "primary": (
    "light": lightblue,
    "normal": blue,
    "dark": darkblue,
  ),
  "secondary": (
    "light": pink,
    "normal": red,
    "dark": firebrick,
  ),
  "backup": (
    "light": rgb(231, 199, 95),
    "normal": yellow,
    "dark": rgba(139, 139, 20, 0.178),
  ),
  "accent": orange,
);

$font-size-map: (
  "large": 48px,
  "normal": 16px,
  "small": 11px,
);

// Handle irregular map
@function clr($color...) {
  $output-color: map.get($color-v2, $color...);
  @if ($output-color != null) {
    @return $output-color;
  } @else {
    @error "You entered #{$color} which does not match!";
  }
}

@debug "type of $colors is #{meta.type-of($colors)}!";
@debug 'primary value is #{map.get($colors, "primary")}!';
@debug 'special value is #{map.get($colors, "special")}!';

body {
  color: map.get($colors, "secondary");
  font-size: map.get($font-size-map, "small");
}

.example {
  color: clr("accent");
}

// Example of nested map
.exmaple-2 {
  color: clr("backup", "light");
}
